/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import Handlers.BMPtoJPEGImage;
import Handlers.BmpHandlerCopy;
import Handlers.ImageHandler;
import Handlers.JPEGHandler;
import Handlers.JPEGImageCopy;
import Handlers.JPEGtoBMPImage;
import java.awt.Image;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author bruce
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    private File fichero;
    public Editor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        cmdSelectImage = new javaswing.controls.ButtonCustom();
        selectedImage = new javax.swing.JLabel();
        JPEGaBMP = new javaswing.controls.ButtonCustom();
        copyJPEG = new javaswing.controls.ButtonCustom();
        cmdRGB = new javaswing.controls.ButtonCustom();
        cmdModifyImage = new javaswing.controls.ButtonCustom();
        cmdWhiteBlack = new javaswing.controls.ButtonCustom();
        cmdExecute = new javaswing.controls.ButtonCustom();
        lblPathImage = new javax.swing.JLabel();
        cmdMenu = new javaswing.controls.ButtonCustom();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cmdSelectImage.setText("Seleccionar imagen");
        cmdSelectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectImageActionPerformed(evt);
            }
        });

        JPEGaBMP.setText("JPEG a BMP y Vieversa");
        JPEGaBMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPEGaBMPActionPerformed(evt);
            }
        });

        copyJPEG.setText("Copia JPEG");
        copyJPEG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyJPEGActionPerformed(evt);
            }
        });

        cmdRGB.setText("Rojo, verde, Azul, Spehia");
        cmdRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRGBActionPerformed(evt);
            }
        });

        cmdModifyImage.setText("Modificar Imagen");
        cmdModifyImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdModifyImageActionPerformed(evt);
            }
        });

        cmdWhiteBlack.setText("Blanco y negro");
        cmdWhiteBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdWhiteBlackActionPerformed(evt);
            }
        });

        cmdExecute.setText("Ejecutar");
        cmdExecute.setStyle(javaswing.controls.ButtonCustom.ButtonStyle.DESTRUCTIVE);
        cmdExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExecuteActionPerformed(evt);
            }
        });

        lblPathImage.setText("Path /SS//");

        cmdMenu.setText("Menu");
        cmdMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPathImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdSelectImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JPEGaBMP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(copyJPEG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdRGB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdModifyImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdWhiteBlack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdExecute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(selectedImage, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmdMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSelectImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPathImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedImage, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JPEGaBMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyJPEG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdRGB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdModifyImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdWhiteBlack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(cmdExecute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMenuActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Menu menu = new Menu();
        menu.setVisible(true);
        menu.setLocationRelativeTo(null);
        menu.setTitle("Menu");
    }//GEN-LAST:event_cmdMenuActionPerformed

    private void cmdSelectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectImageActionPerformed
        // TODO add your handling code here:
                JFileChooser escojerImagen = new JFileChooser();
        
        int eleccion = escojerImagen.showOpenDialog(this);
        
        if(eleccion == JFileChooser.APPROVE_OPTION) {
            fichero = escojerImagen.getSelectedFile();
            
            ImageIcon imagen = new ImageIcon(fichero.getPath());
            
            Icon icono = new ImageIcon(imagen.getImage().
                           getScaledInstance(selectedImage.getWidth(), selectedImage.getHeight(), Image.SCALE_DEFAULT));
            
            selectedImage.setIcon(icono);
        }
    }//GEN-LAST:event_cmdSelectImageActionPerformed

    private void JPEGaBMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPEGaBMPActionPerformed
        // TODO add your handling code here:
        String extension = fichero.getName().substring(fichero.getName().lastIndexOf(".") + 1);
        if(extension.equals("jpeg")){
        
        
        ImageHandler imagen = new JPEGtoBMPImage(fichero.getName(), fichero.getPath());
        
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.err.println("Error HandlerBMPCopy: " + e.getMessage());
        }
        
        }else if(extension.equals("bmp")){
            System.out.println("BMP");
        ImageHandler imagen = new BMPtoJPEGImage(fichero.getName(), fichero.getPath());
        
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.err.println("Error HandlerBMPCopy: " + e.getMessage());
        }
        }
        
    }//GEN-LAST:event_JPEGaBMPActionPerformed

    private void copyJPEGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyJPEGActionPerformed
        // TODO add your handling code here:
         String extension = fichero.getName().substring(fichero.getName().lastIndexOf(".") + 1);
        if(extension.equals("jpeg")){
        
        
        ImageHandler imagen = new JPEGImageCopy(fichero.getName(), fichero.getPath());
        
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.err.println("Error HandlerBMPCopy: " + e.getMessage());
        }
        
        }else{
            JOptionPane.showMessageDialog(null, "La extension no es JPEG");
        }
    }//GEN-LAST:event_copyJPEGActionPerformed

    private void cmdRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRGBActionPerformed
        // TODO add your handling code here:
        ImageHandler imagen = new Handlers.JPEGImageHandlerColors(fichero.getName(), fichero.getPath());
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.out.println("Error HandlerColor:" + e.getMessage());
        }
    }//GEN-LAST:event_cmdRGBActionPerformed

    private void cmdWhiteBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdWhiteBlackActionPerformed
        // TODO add your handling code here:
        ImageHandler imagen = new Handlers.JPEGImageHandlerBN(fichero.getName(), fichero.getPath());
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.out.println("Error HandlerColor:" + e.getMessage());
        }
    }//GEN-LAST:event_cmdWhiteBlackActionPerformed

    private void cmdModifyImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdModifyImageActionPerformed
        // TODO add your handling code here:
        ImageHandler imagen = new Handlers.ModificarImagen(fichero.getName(), fichero.getPath());
        try {
            JPEGHandler.runHandler(imagen);
        } catch (Exception e) {
            System.out.println("Error HandlerColor:" + e.getMessage());
        }
    }//GEN-LAST:event_cmdModifyImageActionPerformed

    private void cmdExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExecuteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdExecuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javaswing.controls.ButtonCustom JPEGaBMP;
    private javaswing.controls.ButtonCustom cmdExecute;
    private javaswing.controls.ButtonCustom cmdMenu;
    private javaswing.controls.ButtonCustom cmdModifyImage;
    private javaswing.controls.ButtonCustom cmdRGB;
    private javaswing.controls.ButtonCustom cmdSelectImage;
    private javaswing.controls.ButtonCustom cmdWhiteBlack;
    private javaswing.controls.ButtonCustom copyJPEG;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lblPathImage;
    private javax.swing.JLabel selectedImage;
    // End of variables declaration//GEN-END:variables
}
